# .github/workflows/pull-request-comment.yml
name: Pull Request Comment Handler

on:
  issue_comment:
    types: [created, edited]

permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  get_trigger_info:
    if: github.event.issue.pull_request
    uses: soulCooker/landingzoneaccelerator/.github/workflows/shared-ci-get-pull-request-info.yml@main
    secrets: inherit
    with:
      pr_number: ${{ github.event.issue.number }}
      comment_body: ${{ github.event.comment.body }}

  process_trigger_file:
    needs: get_trigger_info
    uses: soulCooker/landingzoneaccelerator/.github/workflows/shared-ci-upload-trigger-file.yml@main
    secrets: inherit
    with:
      command: ${{ needs.get_trigger_info.outputs.command }}
      base_ref: ${{ needs.get_trigger_info.outputs.base_ref }}
      head_sha: ${{ needs.get_trigger_info.outputs.head_sha }}
      changed_files: ${{ needs.get_trigger_info.outputs.changed_files }}
      trigger_file_name: "PR${{ github.event.issue.number }}-[${{ github.actor }}]-${{ github.run_number }}.json"
      IAC_GOVERNANCE_REPO: soulCooker/landingzoneaccelerator
      IAC_GOVERNANCE_REF: main

  get_exec_result:
    needs: process_trigger_file
    runs-on: ubuntu-latest
    steps:
      - name: Checkout scripts
        uses: actions/checkout@v4
        with:
          repository: soulCooker/landingzoneaccelerator
          token: ${{ secrets.GITHUB_TOKEN }}
          ref: main
          sparse-checkout: |
            scripts/parse_exec_result.py

      - name: Setup Python environment
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install alibabacloud-oss-v2

      - name: Get execution result
        id: get_result
        run: |
          result_path=${{ needs.process_trigger_file.outputs.result_path }}

          # Run the script to get execution result
          python scripts/parse_exec_result.py \
            --oss-url="${result_path}" \
            --output-file=execution_result.txt

          # Read the result file and set output
          if [ -f execution_result.txt ]; then
            # Convert file content to base64 to avoid special character issues
            result_base64=$(base64 -w 0 execution_result.txt)
            echo "result_content_base64=$result_base64" >> $GITHUB_OUTPUT
          else
            exit 1
          fi
        env:
          OSS_ACCESS_KEY_ID: ${{ secrets.ALIBABA_CLOUD_ACCESS_KEY_ID }}
          OSS_ACCESS_KEY_SECRET: ${{ secrets.ALIBABA_CLOUD_ACCESS_KEY_SECRET }}
          OSS_BUCKET: ${{ vars.OSS_BUCKET }}
          OSS_REGION: ${{ vars.OSS_REGION }}

      - name: Comment on PR
        uses: actions/github-script@v7
        with:
          script: |
            const resultBase64 = '${{ steps.get_result.outputs.result_content_base64 }}';
            let resultContent = '‚ùå Failed to get execution result';

            if (resultBase64) {
              try {
                resultContent = Buffer.from(resultBase64, 'base64').toString('utf-8');
              } catch (error) {
                resultContent = '‚ùå Failed to decode execution result';
              }
            }

            const { data: comment } = await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `# üöÄ Execution Result

            ${resultContent}

            ---
            *This comment was automatically generated by the IAC workflow.*`
            });
